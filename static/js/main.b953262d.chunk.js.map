{"version":3,"sources":["components/Main_content/Login/Login.module.css","components/Header/Header.module.css","assets/loader.module.css","components/Navbar/Navbar.jsx","Api/api.js","redux/frendsReducer.js","components/Main_content/Frends/Frends.jsx","redux/Hoc/authRedirect.js","components/Main_content/Frends/Frends_container.jsx","redux/auth-reducer.js","components/Main_content/Login/Login_form.jsx","components/Main_content/Login/Login.jsx","redux/messagesReducer.js","components/Main_content/Messages/Messages.jsx","components/Main_content/Messages/Messages_container.jsx","components/Main_content/Profile/All_post/All_post_item/All_post_item.jsx","components/Main_content/Profile/All_post/All_post.jsx","components/Main_content/Profile/All_post/All_post_container.jsx","redux/profileReducer.js","components/Main_content/Profile/My_post/My_post.jsx","components/Main_content/Profile/My_post/My_post_container.jsx","components/Main_content/Profile/Profile_info/Profile_status.jsx","components/Main_content/Profile/Profile_info/Profile_info.jsx","components/Main_content/Profile/Profile_info/Profile_info_conainer.jsx","components/Main_content/Profile/Profile.jsx","components/Main_content/Main_content.jsx","components/Header/Header.jsx","components/Header/Heder_container.jsx","redux/appReducer.js","App.js","serviceWorker.js","redux/redux.js","index.js","components/Navbar/Navbar.module.css","assets/loader.gif","components/Main_content/Profile/Profile_info/Profile_info.module.css","components/Main_content/Frends/Frends.module.css","components/Main_content/Messages/Messages.module.css","components/Main_content/Profile/All_post/All_post_item/All_post_item.module.css","components/Main_content/Profile/All_post/All_post.module.css","components/Main_content/Main_content.module.css","components/Main_content/Profile/My_post/My_post.module.css"],"names":["module","exports","Navbar","className","s","nav","to","activeClassName","activeLink","instance","axios","baseURL","withCredentials","headers","userApi","countSizeUsers","pageNumberActive","get","id","post","delete","profileApi","userId","status","put","file","formData","FormData","append","authApi","email","password","rememberMe","initianalState","frends","totalCount","loader","followingProgress","loaderCreator","type","followingProgressCreator","frendsReducer","state","action","newState","map","u","followed","response","filter","Frends","props","users","key","imgProfile","src","photos","small","alt","link","name","uniqueUrlName","disabled","some","onClick","unfollow","follow","pageCount","pageCountTotal","i","activePage","push","page","onPageChanged","MapStateToProps","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","frendsApiComponent","number","getUsers","loaderGif","toglefollowingProgress","compose","frendsPage","dispatch","then","data","resultCode","followCreator","unfollowCreator","pageNumber","setUsersCreator","items","login","authCreator","authData","authReducer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","error","message","messages","length","stopSubmit","_error","dialogsData","messageData","addMessageCreator","sendMessage","messagesReducer","newMessage","Dialogs","path","Dialog","MessagesForm","Messages","dialogsElements","d","messageElements","m","wrapper","column","messagesPage","changeNewMessageInputText","All_post_item","post_all_item","post_all_item_img","post_all_item_content","All_post","postElements","postData","p","post_all","All_post_container","profilePage","profileInfo","setProfileStatus","profileReducer","newPost","newMyPostText","photo","NewMyPost","send","My_post","my_post","addPost","My_post_container","newMyPost","addPostCreator","profileStatus","editMode","activateEditMode","setState","deActivateEditMode","updateStatus","onChangeStatusInput","e","target","value","prevProps","prevState","onChange","autoFocus","onBlur","Profile_info","profile","profile_img","large","isOwner","files","savePhoto","profile_info","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","profileInfoAPI","profileId","match","params","togleLoader","setUserProfile","getStatus","refreshProfile","withRouter","Profile","Main_content","main_content","main_content_img","render","Messages_container","Frends_container","Header","header","logout","Header_container","authotized","appReducer","App","authotizedSuccess","Heder_container","app","promise","Promise","all","Boolean","window","location","hostname","require","combineReducers","createStore","applyMiddleware","store","formReducer","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b953262d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3CoKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2rjiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__TWc-r\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li><NavLink to=\"/frends\" activeClassName={s.activeLink}>Frends</NavLink></li>\r\n                <li><NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink></li>\r\n                <li><NavLink to=\"/messages\" activeClassName={s.activeLink}>Messages</NavLink></li>\r\n                <li><NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink></li>\r\n                <li><NavLink to=\"music\" activeClassName={s.activeLink}>Music</NavLink></li>\r\n                <li><NavLink to=\"/setting\" activeClassName={s.activeLink}>Setting</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': 'a05eebd7-af21-4521-b5d7-10d633f7d696' }\r\n});\r\n\r\nexport const userApi = {\r\n    getUsers(countSizeUsers, pageNumberActive) {\r\n        return instance.get(`users?count=${countSizeUsers}&page=${pageNumberActive}`)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`, {})\r\n\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\nexport const profileApi = {\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status/`, { status })\r\n    },\r\n    savePhoto(file) {\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const authApi = {\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`/auth/login`, { email, password, rememberMe })\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`)\r\n    },\r\n    authData() {\r\n        return instance.get(`/auth/me`)\r\n    }\r\n}","import { userApi } from \"../Api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst ON_PAGE_CHANGED = 'ON_PAGE_CHANGED';\r\nconst LOADER = 'LOADER'\r\nconst FOLLOWING_PROGRESS = 'FOLLOWING_PROGRESS'\r\n\r\nlet initianalState = {\r\n    frends: [\r\n        // { id: 1, followed: true, fulName: 'Dmitry', status: 'u4u react', location: { city: 'Cheb', country: 'Rus' } },\r\n        // { id: 2, followed: true, fulName: 'Yana', status: 'web-desiner', location: { city: 'Cheb', country: 'Rus' } },\r\n    ],\r\n    countSizeUsers: 10,\r\n    totalCount: 0,\r\n    pageNumberActive: 5,\r\n    loader: false,\r\n    followingProgress: [],\r\n}\r\n\r\nconst frendsReducer = (state = initianalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n\r\n            let newState = {\r\n                ...state, frends: state.frends.map(u => {\r\n                    if (u.id === action.id) {\r\n\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n            return newState;\r\n        }\r\n        case UNFOLLOW: {\r\n            let newState = {\r\n                ...state, frends: state.frends.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n            return newState;\r\n        }\r\n        case SET_USERS: {\r\n            let newState = {\r\n                ...state, frends: action.response, totalCount: action.totalCount\r\n            }\r\n\r\n            return newState;\r\n        }\r\n        case ON_PAGE_CHANGED: {\r\n            let newState = {\r\n                ...state, pageNumberActive: action.pageNumberActive\r\n            }\r\n            return newState;\r\n        }\r\n        case LOADER: {\r\n            let newState = {\r\n                ...state, loader: action.loader\r\n            }\r\n            return newState;\r\n        }\r\n        case FOLLOWING_PROGRESS: {\r\n            let newState = {\r\n                ...state, followingProgress: action.followingProgress ? [...state.followingProgress, action.id] : state.followingProgress.filter(id => id != action.id)\r\n            }\r\n            return newState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const followCreator = (id) => {\r\n    return { type: FOLLOW, id }\r\n};\r\nexport const unfollowCreator = (id) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        id: id\r\n    }\r\n};\r\nexport const setUsersCreator = (response, totalCount) => ({ type: SET_USERS, response, totalCount });\r\nexport const onPageChangedCreator = (pageNumberActive) => ({ type: ON_PAGE_CHANGED, pageNumberActive });\r\nexport const loaderCreator = (loader) => ({ type: LOADER, loader });\r\nexport const followingProgressCreator = (followingProgress, id) => ({ type: FOLLOWING_PROGRESS, followingProgress, id });\r\n\r\nexport const getUsers = (countSizeUsers, pageNumberActive) => {\r\n    return (dispatch) => {\r\n        dispatch(loaderCreator(true))\r\n        userApi.getUsers(countSizeUsers, pageNumberActive)\r\n            .then(response => {\r\n                dispatch(loaderCreator(false))\r\n                dispatch(setUsersCreator(response.data.items, response.data.totalCount))\r\n            })\r\n    }\r\n}\r\nexport const follow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(followingProgressCreator(true, id))\r\n        userApi.follow(id)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followCreator(id));\r\n                }\r\n                dispatch(followingProgressCreator(false, id))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(followingProgressCreator(true, id))\r\n        userApi.unfollow(id)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowCreator(id));\r\n                }\r\n                dispatch(followingProgressCreator(false, id))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default frendsReducer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Frends.module.css';\r\n\r\nlet Frends = (props) => {\r\n    \r\n    let users = props.frends.map((u) => {\r\n        return (\r\n\r\n            <div key={u.id}>\r\n                <div>\r\n                    <NavLink to={`profile/${u.id}`}><img className={s.imgProfile} src={u.photos.small ? u.photos.small : \"https://cdn.iconscout.com/icon/premium/png-512-thumb/profile-1506810-1278719.png\"} alt=\"\" /></NavLink>\r\n                    <NavLink to={`profile/${u.id}`} className={s.link}> {u.name}</NavLink>\r\n                    <p>{u.uniqueUrlName}</p>\r\n                    <p>{u.status}</p>\r\n                </div>\r\n                {/* <div>\r\n            <span>{u.location.city}</span>&nbsp;\r\n            <span>{u.location.country}</span>\r\n        </div> */}\r\n                <span>\r\n                    {u.followed ?\r\n                        <button disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.unfollow(u.id)\r\n                        }}>UnFollow</button>\r\n\r\n                        : <button disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.follow(u.id)\r\n                        }}>Follow</button>}\r\n                </span>\r\n            </div >\r\n        )\r\n    })\r\n    let pageCount = props.totalCount / props.countSizeUsers;\r\n    let pageCountTotal = [];\r\n    for (let i = 1; i < pageCount; i++) {\r\n        let pageNumberActive = props.pageNumberActive === i ? s.activePage : null;\r\n        pageCountTotal.push(<span\r\n            className={pageNumberActive + ' ' + s.page}\r\n            onClick={() => { props.onPageChanged(i) }}> {i} </span >);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pageCountTotal}\r\n            {users}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Frends;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet MapStateToProps = (state) => {\r\n    return { isAuth: state.auth.isAuth }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(MapStateToProps)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, followCreator, followingProgressCreator, getUsers, loaderCreator, onPageChangedCreator, setUsersCreator, unfollow, unfollowCreator } from '../../../redux/frendsReducer';\r\nimport Frends from './Frends';\r\nimport loaderGif from '../../../assets/loader.gif'\r\nimport { userApi } from '../../../Api/api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../../redux/Hoc/authRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass frendsApiComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.countSizeUsers, this.props.pageNumberActive);\r\n    }\r\n    onPageChanged = (number) => {\r\n        this.props.getUsers(this.props.countSizeUsers, number);\r\n        this.props.onPageChanged(number);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.loader ? <img src={loaderGif} /> : <Frends frends={this.props.frends}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                totalCount={this.props.totalCount}\r\n                countSizeUsers={this.props.countSizeUsers}\r\n                onPageChanged={this.onPageChanged}\r\n                pageNumberActive={this.props.pageNumberActive}\r\n                toglefollowingProgress={this.props.toglefollowingProgress}\r\n                followingProgress={this.props.followingProgress}\r\n            />}\r\n        </>\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        frends: state.frendsPage.frends,\r\n        totalCount: state.frendsPage.totalCount,\r\n        countSizeUsers: state.frendsPage.countSizeUsers,\r\n        pageNumberActive: state.frendsPage.pageNumberActive,\r\n        loader: state.frendsPage.loader,\r\n        followingProgress: state.frendsPage.followingProgress,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (id) => {\r\n            dispatch(follow(id));\r\n        },\r\n        unfollow: (id) => {\r\n            dispatch(unfollow(id));\r\n        },\r\n        onPageChanged: (pageNumber) => {\r\n            dispatch(onPageChangedCreator(pageNumber))\r\n        },\r\n        getUsers: (countSizeUsers, pageNumberActive) => {\r\n            dispatch(getUsers(countSizeUsers, pageNumberActive))\r\n        },\r\n        toglefollowingProgress: (followingProgress, id) => {\r\n            dispatch(followingProgressCreator(followingProgress, id))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect\r\n)(frendsApiComponent);;","import { stopSubmit } from \"redux-form\";\r\nimport { authApi } from \"../Api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\n\r\nlet initianalState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initianalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            let newState = { ...state, ...action.data };\r\n            return newState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const authCreator = (id, login, email, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: { id, login, email, isAuth }\r\n    }\r\n};\r\nexport const authData = () => {\r\n    return (dispatch) => {\r\n        return authApi.authData()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authCreator(response.data.data.id, response.data.data.login, response.data.data.email, true));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authApi.login(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authData())\r\n                } else {\r\n                    debugger\r\n                    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\r\n                    dispatch(stopSubmit(\"login\", { _error: message }))\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authApi.logout()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authCreator(null, null, null, false));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './Login.module.css'\r\n\r\nlet LoginForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"email\" component={\"input\"} type=\"text\" placeholder=\"email\" />\r\n        </div>\r\n        <div>\r\n            <Field name=\"password\" component={\"input\"} type=\"password\" placeholder=\"password\" />\r\n        </div>\r\n        {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>\r\n        }\r\n        <div>\r\n            <Field name=\"rememberMe\" component={\"input\"} type=\"checkbox\" />\r\n             Remember me\r\n        </div>\r\n        <button>Login</button>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../../redux/auth-reducer';\r\nimport LoginReduxForm from './Login_form';\r\n\r\nlet Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) return <Redirect to=\"profile\" />\r\n    return <>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\n\r\n\r\nlet initianalState = {\r\n\r\n    dialogsData: [{ name: 'Dima', id: 1 }, { name: 'Yana', id: 2 }, { name: 'Vlad', id: 3 }],\r\n    messageData: [{ message: 'Privet', id: 1 }, { message: 'Poka', id: 2 }, { message: 'Poka', id: 3 }],\r\n\r\n}\r\n\r\nconst messagesReducer = (state = initianalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newState = { ...state, messageData: [...state.messageData] };\r\n            let newMessage = {\r\n                message: action.sendMessage.sendMessage,\r\n                id: 4\r\n            };\r\n            newState.messageData.push(newMessage);\r\n\r\n            return newState;\r\n        }\r\n        default: return state;\r\n\r\n    }\r\n}\r\n\r\nexport const addMessageCreator = (sendMessage) => ({ type: ADD_MESSAGE, sendMessage })\r\n\r\nexport default messagesReducer;","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { addMessageCreator, updateMessageInputCreator } from '../../../redux/messagesReducer';\r\nimport s from './Messages.module.css';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let path = '/messages/' + props.id\r\n    return (\r\n        <div>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Dialog = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\nlet MessagesForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field type=\"text\" component=\"input\" name=\"newMessage\" />\r\n        <button >Send message</button>\r\n    </form>\r\n}\r\nMessagesForm = reduxForm({ form: \"messageForm\" })(MessagesForm);\r\nconst Messages = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map(d => <Dialogs name={d.name} id={d.id} />)\r\n    let messageElements = props.messageData.map(m => <Dialog message={m.message} />)\r\n\r\n\r\n    let sendMessage = (data) => {\r\n        props.sendMessage(addMessageCreator(data.newMessage));\r\n    }\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.column}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.column}>\r\n                <div>{messageElements}</div>\r\n                <MessagesForm onSubmit={sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../redux/Hoc/authRedirect';\r\n\r\nimport { addMessageCreator, updateMessageInputCreator } from '../../../redux/messagesReducer';\r\nimport Messages from './Messages';\r\n\r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messageData: state.messagesPage.messageData,\r\n        changeNewMessageInputText: state.messagesPage.changeNewMessageInputText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (sendMessage) => {\r\n            dispatch(addMessageCreator(sendMessage));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(MapStateToProps, MapDispatchToProps)\r\n)(Messages);","import React from 'react';\r\nimport s from './All_post_item.module.css'\r\n\r\nconst All_post_item = (props) => {\r\n    return (\r\n        <div className={s.post_all_item}>\r\n            <div className={s.post_all_item_img}>\r\n                <img src=\"https://image.shutterstock.com/image-vector/man-icon-vector-260nw-1040084344.jpg\" />\r\n            </div>\r\n            <div className={s.post_all_item_content}>\r\n                <p>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default All_post_item;","import React from 'react';\r\nimport s from './All_post.module.css'\r\nimport All_post_item from './All_post_item/All_post_item';\r\n\r\nconst All_post = (props) => {\r\n    let postElements = props.postData.map(p => <All_post_item message={p.message} />)\r\n\r\n    return (\r\n        <div className={s.post_all}>\r\n            {postElements}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default All_post;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport All_post from './All_post';\r\nimport s from './All_post.module.css'\r\nimport All_post_item from './All_post_item/All_post_item';\r\n\r\n// const All_post = (props) => {\r\n//     let postElements = props.postData.map(p => <All_post_item message={p.message} />)\r\n\r\n//     return (\r\n//         <div className={s.post_all}>\r\n//             {postElements}\r\n//         </div>\r\n//     )\r\n// };\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n    }\r\n}\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst All_post_container = connect(MapStateToProps, MapDispatchToProps)(All_post);\r\n\r\nexport default All_post_container;","import { profileApi } from \"../Api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD_POST';\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_PHOTO = 'SET_PHOTO'\r\n\r\nlet initianalState = {\r\n    postData: [{ message: 'privet kak dela?' }, { message: 'Super' }, { message: 'Kruto' }],\r\n    profileInfo: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initianalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newState = { ...state, postData: [...state.postData] };\r\n            let newPost = {\r\n                message: action.newMyPostText\r\n            };\r\n            newState.postData.push(newPost);\r\n\r\n            return newState;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            let newState = { ...state };\r\n            newState.profileInfo = action.profileInfo;\r\n            return newState;\r\n        }\r\n        case SET_STATUS: {\r\n            let newState = { ...state, status: action.status };\r\n\r\n            return newState;\r\n        }\r\n        case SET_PHOTO: {\r\n            let newState = {\r\n                ...state,\r\n                profileInfo: { ...state.profileInfo, photos: action.photo }\r\n            }\r\n            return newState\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const addPostCreator = (newMyPostText) => ({ type: ADD_POST, newMyPostText });\r\nexport const setUserProfile = (profileInfo) => ({ type: SET_USER_PROFILE, profileInfo })\r\nexport const setProfileStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const setPhotoSuccess = (photo) => ({ type: SET_PHOTO, photo })\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setProfileStatus(response.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileApi.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0)\r\n                    dispatch(setProfileStatus(status))\r\n            })\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => {\r\n    return (dispatch) => {\r\n        profileApi.savePhoto(file)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0)\r\n                    dispatch(setPhotoSuccess(response.data.data.photos))\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './My_post.module.css'\r\n\r\nlet NewMyPost = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field type=\"text\" name=\"newMyPostText\" component=\"input\" />\r\n        <button className={s.send} >send</button>\r\n    </form>\r\n}\r\nNewMyPost = reduxForm({ form: \"ProfileNewMyPost\" })(NewMyPost);\r\n\r\nconst My_post = (props) => {\r\n\r\n    let addPost = (data) => {\r\n\r\n        props.addPost(data.newMyPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.my_post}>\r\n            <h2>My posts</h2>\r\n            <NewMyPost onSubmit={addPost} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default My_post;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostCreator, updatePostInputCreator } from '../../../../redux/profileReducer';\r\nimport My_post from './My_post';\r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n\r\n    return {\r\n        newMyPost: state.profilePage.newMyPost,\r\n    }\r\n}\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        addPost: (newMyPostText) => {\r\n            dispatch(addPostCreator(newMyPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst My_post_container = connect(MapStateToProps, MapDispatchToProps)(My_post);\r\n\r\nexport default My_post_container;","import React from 'react';\r\nimport s from './Profile_info.module.css'\r\n\r\n\r\nclass profileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onChangeStatusInput = (e) => {\r\n        this.setState({\r\n            status: e.target.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n    }\r\n    render() {\r\n        return <div className={s.status}>\r\n            {\r\n                this.state.editMode\r\n                    ? <input onChange={this.onChangeStatusInput} autoFocus={true} onBlur={this.deActivateEditMode} type=\"text\" value={this.state.status} />\r\n                    : <span onClick={this.activateEditMode}>{!this.props.status ? \"No status\" : this.props.status}</span>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileStatus;","import React from 'react';\r\nimport s from './Profile_info.module.css'\r\nimport ProfileStatus from './Profile_status';\r\n\r\nconst Profile_info = (props) => {\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.profile_img}>\r\n                <img src={!props.profileInfo ? \"https://upload-icon.s3.us-east-2.amazonaws.com/uploads/icons/png/19339625881548233621-512.png\" : props.profileInfo.photos.large ? props.profileInfo.photos.large : \"https://upload-icon.s3.us-east-2.amazonaws.com/uploads/icons/png/19339625881548233621-512.png\"} />\r\n                {props.isOwner && <input type={\"file\"} onChange={onPhotoSelected} />}\r\n            </div>\r\n            <div className={s.profile_info}>\r\n                <h1>{!props.profileInfo ? \"\" : props.profileInfo.fullName}</h1>\r\n                <p>About me: {!props.profileInfo ? \"\" : props.profileInfo.aboutMe}</p>\r\n                <p>lookingForAJob: {!props.profileInfo ? \"\" : props.profileInfo.lookingForAJob ? <span>Yes</span> : <span>No</span>}</p>\r\n                <p>lookingForAJobDescription: {!props.profileInfo ? \"\" : props.profileInfo.lookingForAJobDescription}</p>\r\n                <p>Status: <ProfileStatus status={props.status} updateStatus={props.updateStatus} /></p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile_info;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, savePhoto, setUserProfile, updateStatus } from '../../../../redux/profileReducer';\r\nimport Profile_info from './Profile_info';\r\nimport * as axios from 'axios';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport loaderGif from '../../../../assets/loader.gif'\r\nimport { loaderCreator } from '../../../../redux/frendsReducer';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../../redux/Hoc/authRedirect';\r\n\r\n\r\nclass profileInfoAPI extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let profileId = this.props.match.params.profileId;\r\n        if (!profileId) {\r\n            profileId = this.props.id;\r\n        }\r\n        this.props.togleLoader(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${profileId}`)\r\n            .then(response => {\r\n                this.props.togleLoader(false)\r\n                this.props.setUserProfile(response.data)\r\n            })\r\n\r\n        this.props.getStatus(profileId);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.profileId != prevProps.match.params.profileId)\r\n            this.refreshProfile();\r\n    }\r\n    render() {\r\n        return <> {this.props.loader ? <img src={loaderGif} /> : <Profile_info profileInfo={this.props.profileInfo} status={this.props.status}\r\n            updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.profileId} savePhoto={this.props.savePhoto} />}</>\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => {\r\n\r\n    return {\r\n        profileInfo: state.profilePage.profileInfo,\r\n        loader: state.frendsPage.loader,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id\r\n    }\r\n}\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        setUserProfile: (profileInfo) => {\r\n            dispatch(setUserProfile(profileInfo))\r\n        },\r\n        togleLoader: (loader) => {\r\n            dispatch(loaderCreator(loader))\r\n        },\r\n        getStatus: (userId) => {\r\n            dispatch(getStatus(userId))\r\n        },\r\n        updateStatus: (status) => {\r\n            dispatch(updateStatus(status))\r\n        },\r\n        savePhoto: (file) => {\r\n            dispatch(savePhoto(file))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(profileInfoAPI);","import React from 'react';\r\nimport All_post_container from './All_post/All_post_container';\r\nimport My_post_container from './My_post/My_post_container';\r\nimport Profile_info_container from './Profile_info/Profile_info_conainer';\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    return (\r\n        <div >\r\n            <Profile_info_container />\r\n            <My_post_container />\r\n            <All_post_container />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Frends_container from './Frends/Frends_container';\r\nimport Login from './Login/Login';\r\nimport s from './Main_content.module.css'\r\nimport Messages from './Messages/Messages';\r\nimport Messages_container from './Messages/Messages_container';\r\nimport Profile from './Profile/Profile';\r\n\r\nconst Main_content = () => {\r\n    return (\r\n        <div className={s.main_content}>\r\n            <img className={s.main_content_img} src=\"https://mdbootstrap.com/img/Photos/Horizontal/Nature/full%20page/img(11).jpg\" alt=\"profile_bg\" />\r\n            <Route path='/profile/:profileId?' render={() => <Profile />} />\r\n            <Route path='/messages' render={() => <Messages_container />} />\r\n            <Route path='/frends' render={() => <Frends_container />} />\r\n            <Route path='/login' render={() => <Login />} />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Main_content;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Facebook_Logo_%282019%29.png/1200px-Facebook_Logo_%282019%29.png\" alt=\"logo\" />\r\n            <div>\r\n                {props.auth.isAuth ? <div>{props.auth.login} <button onClick={props.logout}>Log Out</button></div> : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { authData, logout } from '../../redux/auth-reducer';\r\n\r\nclass Header_container extends React.Component {\r\n    componentDidMount() {\r\n        this.props.authData();\r\n\r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { auth: state.auth }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { authData, logout })(Header_container);","import { authData } from \"./auth-reducer\";\r\n\r\nconst AUTHORIZED_SUCCESS = 'AUTHORIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initianalState = {\r\n    authotized: false\r\n}\r\n\r\nconst appReducer = (state = initianalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case AUTHORIZED_SUCCESS: {\r\n            let newState = { ...state, authotized: true };\r\n            return newState;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const authotizedSuccess = () => {\r\n    return {\r\n        type: AUTHORIZED_SUCCESS\r\n    }\r\n};\r\nexport const authotized = () => (dispatch) => {\r\n    let promise = dispatch(authData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(authotizedSuccess())\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Main_content from './components/Main_content/Main_content';\nimport Heder_container from './components/Header/Heder_container';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { authotized } from './redux/appReducer';\nimport loaderGif from './assets/loader.gif'\nimport s from './assets/loader.module.css'\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.authotized();\n  }\n  render() {\n    if (!this.props.authotizedSuccess) {\n      return <div className={s.loader}><img src={loaderGif} /></div>\n    }\n    return (\n\n      <div className='app-wrapper' >\n        <Heder_container />\n        <Navbar />\n        <Main_content />\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authotizedSuccess: state.app.authotized\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { authotized }),\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import profileReducer from './profileReducer'\r\nimport messagesReducer from './messagesReducer'\r\nimport frendsReducer from './frendsReducer'\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './appReducer';\r\nconst { combineReducers, createStore, applyMiddleware } = require(\"redux\");\r\n\r\n\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        app: appReducer,\r\n        profilePage: profileReducer,\r\n        messagesPage: messagesReducer,\r\n        frendsPage: frendsReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.state = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3qRm7\",\"activeLink\":\"Navbar_activeLink__tnT9z\"};","module.exports = __webpack_public_path__ + \"static/media/loader.3551210e.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_info_profile__1p52k\",\"profile_img\":\"Profile_info_profile_img__1F1ZY\",\"profile_info\":\"Profile_info_profile_info__1LmHU\",\"status\":\"Profile_info_status__1MGOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgProfile\":\"Frends_imgProfile__2t4DB\",\"activePage\":\"Frends_activePage__1Wckk\",\"page\":\"Frends_page__1uEhl\",\"link\":\"Frends_link__2VG__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__2UtoO\",\"column\":\"Messages_column__7i_vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_all_item\":\"All_post_item_post_all_item__2WEh_\",\"post_all_item_img\":\"All_post_item_post_all_item_img__1RMJb\",\"post_all_item_content\":\"All_post_item_post_all_item_content__2BXk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_all\":\"All_post_post_all__1QUHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_content\":\"Main_content_main_content__2STeW\",\"main_content_img\":\"Main_content_main_content_img__1oR5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_post\":\"My_post_my_post__3EQ6P\",\"send\":\"My_post_send__1haD2\"};"],"sourceRoot":""}